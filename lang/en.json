{
    "DiagnosticsExtended": {
        "BackportingDisclaimerMariaDB": "(unless the distributor of your MariaDB binary is backporting security patches)",
        "BackportingDisclaimerPHP": "(unless the distributor of your PHP binary is backporting security patches)",
        "CurlVersionCheckFailed": "Matomo could not check if your curl version has vulnerabilities.",
        "CurlVersionCheckLabel": "curl version check",
        "CurlVersionCheckNoCurl": "Your PHP setup doesn't use curl, so there is nothing to check.",
        "CurlVersionCheckUpToDate": "It seems like there are no known vulnerabilities in your curl version (%s).",
        "CurlVersionCheckVulnerable": "Your curl version (%s) might be vulnerable against these vulnerabilities (unless the distributor of your curl binary is backporting security patches):",
        "DatabaseVersionCheckLabel": "Database version",
        "DatabaseVersionCheckMariaDBEol": "Your MariaDB version (%1$s) does not receive security support by the MariaDB team anymore (since %2$s). You should update to a newer version",
        "DatabaseVersionCheckMariaDBLatestVersion": "You are using the latest version of MariaDB %s.",
        "DatabaseVersionCheckMariaDBNotEol": "Your MariaDB version (%1$s) receives security support by the MariaDB team until %2$s.",
        "DatabaseVersionCheckMariaDBOutdated": "There is a newer MariaDB patch version (%1$s) available (you are using %2$s/%3$s). You should update to it as soon as possible",
        "MatomoJSCheckFailed": "It seems like matomo.js can't be fetched properly.",
        "MatomoJSCheckFailedCurlTip": "try running %s on your server and see if it is able to fetch the file successfully",
        "MatomoJSCheckGzipped": "matomo.js is delivered gzipped.",
        "MatomoJSCheckMIMEError": "matomo.js should be delivered with an 'application/javascript' Content-Type. You are using '%s'.",
        "MatomoJSCheckNotGzipped": "matomo.js is not delivered gzipped. You might want to set up gzip for .js files as it can reduce the size of the file by up to 60 %.",
        "MatomoJSCheckUnknown": "Matomo could not check if your matomo.js can be fetched properly.",
        "NotificationText": "You have enabled the DiagnosticsExtended plugin. It adds a few more experimental system checks (marked with ðŸ§ª) to this page that might help you find issues with your Matomo instance. There might still be a few false positives and false negatives, so don't take the results as a truth, but check yourself if something is wrong. Please report issues with the plugin to the %1$sforum%2$s or %3$screate a GitHub issue%4$s so that the checks can be improved.",
        "NotificationTitle": "About DiagnosticsExtended",
        "OpcacheCheckInternedStrings": "It seems like you have set <code>opcache.interned_strings_buffer</code> below 8MB which might be a bit low. Please increase the value to 8 (Megabyte) or more depending on how many PHP files you serve and how much memory your server has available.",
        "OpcacheCheckJIT": "As you are using PHP 8 or newer, you might want to look into enabling the JIT compiler. It might be able to speed up Matomo by a bit. It would also be great if you could report back any experiences after enabling PHP JIT.",
        "OpcacheCheckMaxFiles": "It seems like you have set <code>opcache.max_accelerated_files</code> to or below %s which might be too low to keep all Matomo files in the cache, especially if you are also hosting other PHP applications. Please set the option to 7963, 16229 or 32531 depending on the number of PHP files your webserver uses.",
        "OpcacheCheckMemory": "It seems like you have set <code>opcache.memory_consumption</code> below 128MB which might be too low to keep all Matomo files in the cache, especially if you are also hosting other PHP applications. Please increase the value to 128 or 256 (Megabyte) depending on how many PHP files you serve and how much memory your server has available.",
        "OpcacheCheckOpcacheDisabled": "It seems like OPcache is disabled in your PHP setup. OPcache stores bytecode of PHP scripts in memory and is therefore able to speed up PHP by quite a bit as it avoids loading and parsing PHP files on every request. Check the <code>opcache.enable</code> php.ini setting for more information.",
        "OpcacheCheckOpcacheEnabled": "It seems like OPcache is enabled. %1$sMB of %2$sMB are used for PHP scripts (%3$s&percnt; wasted) and %4$sMB of %5$sMB are used for interned strings. %6$s&percnt; of requests hit the OPcache.",
        "OpcacheCheckSaveComments": "It seems like you have disabled the <code>opcache.save_comments</code> setting. This removes comments from the OPcache making it smaller, but breaks Matomo. Please set <code>opcache.save_comments</code> to <code>0</code>",
        "OpcacheCheckValidateTimestamps": "It seems like you have disabled <code>opcache.validate_timestamps</code> which means that PHP will never check if the actual files on disk have changed, but continue to use the cached ones. In theory, this should be no issue as Matomo invalidates the OPcache on updates and installs, but you might still want to look into this if you encounter weird issues.",
        "OpensslVersionCheckLabel": "OpenSSL version check",
        "OpensslVersionCheckNoOpenssl": "Your PHP setup doesn't use OpenSSL or curl, so there is nothing to check.",
        "OpensslVersionCheckNotOutdated": "Your OpenSSL version (%s) is not really old. Nevertheless, check if there are known vulnerabilities for it and update it if necessary.",
        "OpensslVersionCheckOutdated": "Your OpenSSL version (%s) is pretty old. Check if there are known vulnerabilities for it and update it if necessary.",
        "PhpIniCheckIsDisabled": "%s is enabled",
        "PhpIniCheckIsEnabled": "%s is enabled",
        "PhpIniCheckLabel": "php.ini options",
        "PhpIniCheckShouldBeDisabled": "%s should be disabled",
        "PhpIniCheckShouldBeEnabled": "%s should be enabled",
        "PhpUserCheckLabel": "PHP running as root",
        "PhpUserCheckWarning": "PHP seems to be running as root. Unless you are using Matomo inside a docker container you should check your setup.",
        "PhpVersionCheckEol": "Your PHP version (%1$s) does not receive security support by the PHP team anymore (since %2$s). You should update to a newer version",
        "PhpVersionCheckLabel": "PHP version",
        "PhpVersionCheckLatestVersion": "You are using the latest version of PHP %s",
        "PhpVersionCheckNoInformation": "No information is known about your PHP version (%s)",
        "PhpVersionCheckNotEol": "Your PHP version (%1$s) receives security support by the PHP team until %2$s.",
        "PhpVersionCheckNotWorking": "Matomo could not check if your PHP version is up-to-date",
        "PhpVersionCheckOutdated": "There is a newer PHP patch version (%1$s) available (you are using %2$s). You should update to it as soon as possible",
        "URLCheckConfigIni": "%s seems to be semi-public. While attackers can't read the config now, the file is publicly accessible and if for whatever reason your webserver stops executing PHP files in the future, everyone can read your MySQL credentials and more. Please check your webserver config.",
        "URLCheckError": "%s should never be public, but seems to be. Please check your webserver config.",
        "URLCheckLabel": "Files that should not be public",
        "URLCheckLongErrorMessage": "Please check if your webserver processes the .htaccess files generated by Matomo properly. If you are using Nginx, please take a look at the %1$sofficial matomo-nginx config%2$s for reference for files that should not be public.<br> Otherwise attackers might be able to read sensitive data.",
        "URLCheckOk": "%s doesn't seem to be publicly reachable",
        "URLCheckSkipped": "Internet features are disabled, so this check is skipped."
    }
}
